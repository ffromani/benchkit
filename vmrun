#!/usr/bin/env python3
# (C) 2018 Red Hat Inc.
# License: Apache v2

import yaml

import argparse
import copy
import json
import logging
import subprocess
import sys
import time


def _configure():
    parser = argparse.ArgumentParser(
        description="A benchmark tool for VMs")
    parser.add_argument("-t", "--timeout", type=int, default=120,
                        help="time (seconds) to wait for the VMs to come up"
                        " - use 0 to disable")
    parser.add_argument("-H", "--hosts", type=str, default="/etc/hosts",
                        help="host map to run the benchmark in."
                        " Use '-' to read from stdin.")
    parser.add_argument("payload")

    return parser.parse_args(sys.argv[1:])


def read_hosts(path):
    if path != '-':
        src = open(path, 'rt')
    else:
        src = sys.stdin

    ret = {}
    for line in src:
        data = line.strip()
        if data.startswith('#'):
            continue
        items = data.split()
        if len(items) < 2:
            continue
        vm_ip, vm_name = items[0], items[1]
        ret[vm_name] = vm_ip

    if path != '-':
        src.close()

    return ret


def _main():
    logging.basicConfig(
        format='%(asctime)s %(message)s',
        datefmt='%m/%d/%Y %H:%M:%S',
        level=logging.DEBUG
    )
    
    args = _configure()
    print(json.dumps(read_hosts(args.hosts)))


if __name__ == "__main__":
    _main()
